
P1025小飞侠的游园方案

描述
经过抽签选择，小智将军第一个进入考场。
菜虫：（身上散射出华贵（?）的光芒）欢迎你，第一位挑战者！！
小智：……（走到菜虫身后，关灯）女王陛下，虽然我们国家现在很富裕，但也请您不要浪费电来用这么大功率的灯泡。
菜虫（汗）：啊啊~~爱卿所言甚是~~那么，你的题目是……我们的情报组织探听到敌人的重要将领――小飞侠星期天会邀他的灵儿妹妹到公园去玩。公园里有很多娱乐项目，可并不是每一项他们都喜欢，所以他们对每一项都进行了“喜欢度”的评分。因为小飞侠也是一个了不起的角色，所以他一定会选择在有限时间内的最好的方案。现在要你做的就是找出在规定时间内他们选择哪几项不同的活动可以使其“喜欢度”之和达到最大，据此我们就可以知道他会在哪些地方出现，从而在那里派人看守了。
小智：（灯泡一亮）每个地方都派人看守不就行了？！
“当~~~” 
菜虫：（手执八公分直径炒锅，筋）……你是白痴吗？-_-##（都派人去看守的话我们会有多少桌三缺一？！）听好了，输入格式是第一行一个正整数N（1<=N<=100）表示总共的娱乐项目数；第二行一个正整数表示规定的时间t（0<t<1000）；下面有N行，其中第i+2行有两个正整数fi（0<=fi<=100）和ti（0<ti<=100），分别表示对项目i的“喜欢度”和它所耗费的时间。输出的时候在第一行输出最大的“喜欢度”之和，下面给你一个样例：

样例1

样例输入1
3
5
1 2
5 5
4 3

样例输出1
5

限制
各个测试点1s

来源
Vivian Snow
From 正・蠢盟演义――战略版 Fools-League Tactics





#include<iostream> 
#include<cstdio> 
#include<cmath> 
#include<cstring> 
#include<algorithm> 
#define N 1005

typedef long long ll;
using namespace std;
int main()
{
int n,t;
int a[N],b[N];
int dp[N];
  cin>>n>>t;
  memset(dp,0,sizeof(dp));
  int i,j;
  for(i=1;i<=n;i++) cin>>a[i]>>b[i]; 
  for(i=1;i<=n;i++)
    for(j=t;j>=b[i];j--)
      dp[j]=max(dp[j],dp[j-b[i]]+a[i]);
  cout<<dp[t]<<endl;
}



典型的01背包，运用一维数组